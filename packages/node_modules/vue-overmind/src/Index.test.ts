import { JSDOM } from 'jsdom'
import App from './'
const Vue = require('vue/dist/vue')

const dom = new JSDOM()

describe('Vue', () => {
  it('should mount with connected app', () => {
    const app = new App({
      state: {
        foo: 'bar',
      },
    })
    const vm = new Vue(
      app.connect({
        el: dom.window.document.createElement('div'),
      })
    )
    expect(vm.app.state.foo).toBe('bar')
  })
  it('should expose actions', (done) => {
    const app = new App({
      state: {
        foo: 'bar',
      },
      actions: (action) => ({
        changeFoo: action().mutation((state) => (state.foo = 'bar2')),
      }),
    })

    const instance = new Vue(
      app.connect({
        el: dom.window.document.createElement('div'),
      })
    )
    expect(instance.app.state.foo).toBe('bar')
    Vue.nextTick(() => {
      instance.app.actions.changeFoo()
      expect(instance.app.state.foo).toBe('bar2')
      done()
    })
  })
  it('should expose reaction', (done) => {
    expect.assertions(1)
    let hasReacted = false
    const app = new App({
      state: {
        foo: 'bar',
      },
      actions: (action) => ({
        changeFoo: action().mutation((state) => (state.foo = 'bar2')),
      }),
    })

    const instance = new Vue(
      app.connect({
        el: dom.window.document.createElement('div'),
        mounted() {
          this.app.reaction(
            (state) => state.foo,
            () => {
              hasReacted = true
            }
          )
        },
      })
    )
    Vue.nextTick(() => {
      instance.app.actions.changeFoo()
      expect(hasReacted).toBe(true)
      done()
    })
  })
})
