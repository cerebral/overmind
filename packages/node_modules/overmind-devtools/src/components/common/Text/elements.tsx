import styled from '../../../styled-components'
import { Colors } from '../../../theme'

export type Variant = keyof typeof styles

const styles = {
  header: {
    fontSize: 'largest',
    textTransform: 'none',
    fontWeight: 'bold',
    padding: 'large',
    densePadding: 'small',
  },
  title: {
    fontSize: 'large',
    textTransform: 'none',
    fontWeight: 'bold',
    padding: 'normal',
    densePadding: 'smaller',
  },
  label: {
    fontSize: 'medium',
    textTransform: 'uppercase',
    fontWeight: 'normal',
    padding: 'small',
    densePadding: 'smaller',
  },
  text: {
    fontSize: 'normal',
    textTransform: 'none',
    fontWeight: 'normal',
    padding: 'small',
    densePadding: 'smaller',
  },
  description: {
    fontSize: 'small',
    textTransform: 'none',
    fontWeight: 'normal',
    padding: 'none',
    densePadding: 'none',
  },
  hint: {
    fontSize: 'smallest',
    textTransform: 'none',
    fontWeight: 'normal',
    padding: 'none',
    densePadding: 'none',
  },
}

export const TextElement = styled<
  {
    variant?: Variant
    dense?: boolean
    color?: keyof Colors
    mono?: boolean
  },
  'p'
>('p')`
  font-family: ${({ mono }) => (mono ? 'monospace' : 'inherit')};
  line-height: ${({ mono }) => (mono ? '16px' : 'inherit')};
  margin: 0;
  text-transform: ${({ theme, variant }) => styles[variant].textTransform};
  padding: ${({ theme, variant, dense }) =>
    dense
      ? `${theme.padding[styles[variant].densePadding]} 0`
      : `${theme.padding[styles[variant].padding]} 0`};
  color: ${({ theme, color }) => theme.color[color]};
  font-size: ${({ theme, variant }) =>
    theme.fontSize[styles[variant].fontSize]};
  font-weight: ${({ theme, variant }) => styles[variant].fontWeight};
`
