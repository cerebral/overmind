import * as React from 'react'
import { connect, Connect } from '../../app'
import { Wrapper, Container } from './elements'
import Input from '../common/Input'
import Button from '../common/Button'
import Text from '../common/Text'
import Workspace from '../Workspace'

class Devtools extends React.Component<Connect> {
  componentDidMount() {
    this.props.actions.loadDevtools()
  }
  /*
  storeCurrentApps(apps) {
    jsonStorage.set(
      'apps',
      Object.keys(apps).reduce((appsToStore, port) => {
        appsToStore[port] = {
          name: apps[port].name,
          type: apps[port].type,
          ssl: apps[port].ssl,
        }

        return appsToStore
      }, {})
    )
  }
  addNewPort() {
    this.setState({
      showAddApp: true,
    })
  }
  cancelAddNewPort() {
    this.setState({
      showAddApp: false,
    })
  }
  changePort(port) {
    this.setState({
      currentPort: port,
    })
  }
  removePort(portToRemove) {
    const newApps = Object.keys(this.state.apps)
      .filter((port) => port !== portToRemove)
      .reduce((apps, remainingPort) => {
        apps[remainingPort] = this.state.apps[remainingPort]

        return apps
      }, {})

    this.setState({
      apps: newApps,
      currentPort:
        portToRemove === this.state.currentPort
          ? Object.keys(newApps)[0]
          : this.state.currentPort,
    })

    connector.removePort(portToRemove)
    this.storeCurrentApps(newApps)
  }
    */
  onPortSubmit = (event: React.FormEvent) => {
    event.preventDefault()
    this.props.actions.addPort()
  }
  renderAddPort() {
    const { appState, actions } = this.props
    return (
      <Wrapper>
        <Container>
          <Text variant="header" dark>
            Welcome to Devtools
          </Text>
          <Text variant="text" dark>
            You have not added any applications yet. Please add a port number
            which will be connected to by one of your apps.
          </Text>
          <form onSubmit={this.onPortSubmit}>
            <Input
              value={appState.newPortValue}
              onChange={actions.changeNewPortValue}
              length={4}
              placeholder="port..."
              addon={
                <Button type="submit" disabled={!appState.newPortValue} primary>
                  Add
                </Button>
              }
            />
          </form>
        </Container>
      </Wrapper>
    )
  }
  render() {
    const { appState } = this.props

    if (appState.isLoading) {
      return (
        <Wrapper>
          <h1>loading...</h1>
        </Wrapper>
      )
    }

    if (Object.keys(appState.apps).length) {
      return <Workspace />
    }

    return this.renderAddPort()
  }
}

export default connect(Devtools)
