const HtmlWebpackPlugin = require('html-webpack-plugin')
const path = require('path')

module.exports = (env, args) => {
  const isProduction = args.mode === 'production'
  return {
    devtool: isProduction ? 'source-map' : 'inline-source-map',
    target: 'electron-renderer',
    entry: path.resolve('src', 'index.tsx'),
    output: {
      path: path.resolve('dist'),
      filename: 'bundle.js',
    },
    optimization: isProduction
      ? {
          minimizer: [
            (compiler) => {
              const TerserPlugin = require('terser-webpack-plugin')
              new TerserPlugin({
                cache: true,
                parallel: true,
                sourceMap: true,
                terserOptions: {
                  safari10: true,
                },
              }).apply(compiler)
            },
          ],
        }
      : {},
    devServer: {
      disableHostCheck: true,
    },
    module: {
      rules: [
        {
          test: /\.tsx?$/,
          loader: 'ts-loader',
          include: path.resolve('src'),
          options: {
            allowTsInNodeModules: true,
          },
        },
        {
          test: /\.(woff2)$/,
          use: [
            {
              loader: 'url-loader',
            },
          ],
        },
      ],
    },
    resolve: {
      extensions: ['.js', '.tsx', '.ts'],
    },
    plugins: [new HtmlWebpackPlugin()],
  }
}
