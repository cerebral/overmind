import App from './'

describe('Reaction', () => {
  test('should instantiate app with reactions', () => {
    let hasRunReaction = false
    const app = new App({
      state: {
        foo: 'bar',
      },
      actions: (action) => ({
        foo: action().mutation((state) => (state.foo = 'bar2')),
      }),
      reactions: (reaction, action) => ({
        foo: reaction(
          (state) => state.foo,
          action().do(() => {
            hasRunReaction = true
          })
        ),
      }),
    })
    app.actions.foo()
    expect(hasRunReaction).toBe(true)
  })
  test('should react to nested changes', () => {
    let hasRunReaction = false
    const app = new App({
      state: {
        foo: [
          {
            completed: false,
          },
        ],
      },
      actions: (action) => ({
        foo: action().mutation((state) => (state.foo[0].completed = true)),
      }),
      reactions: (reaction, action) => ({
        foo: reaction(
          (state) => state.foo,
          action().do(() => {
            hasRunReaction = true
          })
        ),
      }),
    })
    app.actions.foo()
    expect(hasRunReaction).toBe(true)
  })
})
