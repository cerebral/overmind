export type Namespace = 'namespace'

type Module = {
  state?: any
  effects?: any
  actions?: any
  reactions?: any
}

type ModuleFunction = (namespace: string) => Module

type TNamespaces = {
  [namespace: string]: Module | ModuleFunction
}

export default function namespaces<Namespaces extends TNamespaces>(
  namespaces: Namespaces
): {
  state: {
    [Namespace in keyof Namespaces]: Namespaces[Namespace] extends ModuleFunction
      ? ReturnType<Namespaces[Namespace]>['state']
      : Namespaces[Namespace] extends Module
        ? Namespaces[Namespace]['state']
        : any
  }
  effects: {
    [Namespace in keyof Namespaces]: Namespaces[Namespace] extends ModuleFunction
      ? ReturnType<Namespaces[Namespace]>['effects']
      : Namespaces[Namespace] extends Module
        ? Namespaces[Namespace]['effects']
        : any
  }
  actions: {
    [Namespace in keyof Namespaces]: Namespaces[Namespace] extends ModuleFunction
      ? ReturnType<Namespaces[Namespace]>['actions']
      : Namespaces[Namespace] extends Module
        ? Namespaces[Namespace]['actions']
        : any
  }
  reactions: {
    [Namespace in keyof Namespaces]: Namespaces[Namespace] extends ModuleFunction
      ? ReturnType<Namespaces[Namespace]>['reactions']
      : Namespaces[Namespace] extends Module
        ? Namespaces[Namespace]['reactions']
        : any
  }
} {
  return Object.keys(namespaces).reduce(
    (aggr, key) => {
      const namespace =
        typeof namespaces[key] === 'function'
          ? (namespaces[key] as ModuleFunction)(key)
          : (namespaces[key] as Module)

      return Object.assign({
        state: {
          ...aggr.state,
          [key]: namespace.state || {},
        },
        effects: {
          ...aggr.effects,
          [key]: namespace.effects || {},
        },
        actions: {
          ...aggr.actions,
          [key]: namespace.actions,
        },
        reactions: {
          ...aggr.reactions,
          [key]: namespace.reactions,
        },
      })
    },
    {
      state: {},
      effects: {},
      actions: {},
      reactions: {},
    }
  )
}
